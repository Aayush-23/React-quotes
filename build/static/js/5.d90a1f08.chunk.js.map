{"version":3,"sources":["components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","NoQuotesFound","className","classes","noquotes","to","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","loacation","useLocation","isSortingAsc","URLSearchParams","search","get","history","useHistory","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iFCa5CC,EAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,aAAzB,6B,wBCYSC,EAhBG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAQK,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMR,UAAU,MAAMG,GAAE,kBAAaE,EAAMI,IAA3C,iC,iBCgCSC,EA9BG,SAACL,GACjB,IAVkBM,EAAQC,EAUpBC,EAAYC,cAEZC,EAA2C,QAD7B,IAAIC,gBAAgBH,EAAUI,QACjBC,IAAI,QAC/BC,EAAUC,cACVC,GAdYV,EAccN,EAAMM,OAdZC,EAcoBG,EAbvCJ,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAS,GAAK,MAarC,OACE,eAAC,WAAD,WACE,qBAAKxB,UAAWC,IAAQwB,QAAxB,SACE,yBAAQC,QANe,WAC3BP,EAAQQ,KAAK,0BAAqBZ,EAAe,OAAS,SAKtD,kBACQA,EAAe,aAAe,iBAGxC,oBAAIf,UAAWC,IAAQ2B,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVD,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMrB,a,wBCCRsB,UA3BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAKF,OAHAC,qBAAU,WACRL,MACC,CAACA,IACW,YAAXC,EAEA,qBAAKnC,UAAU,WAAf,SACE,cAACwC,EAAA,EAAD,MAIFF,EACK,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAE3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAW9B,OAAQyB,IAHjB,cAAC,EAAD","file":"static/js/5.d90a1f08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1_Vei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1M9J7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2MbZr\",\"sorting\":\"QuoteList_sorting__1A_gB\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const loacation = useLocation();\n  const queryParams = new URLSearchParams(loacation.search);\n  const isSortingAsc = queryParams.get(\"sort\") === \"asc\";\n  const history = useHistory();\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + `${isSortingAsc ? \"desc\" : \"asc\"}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound></NoQuotesFound>;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes}></QuoteList>;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}